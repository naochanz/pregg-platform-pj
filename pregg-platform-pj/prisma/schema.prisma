// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// prisma/schema.prisma

// 既存のモデル
model User {
  id               String   @id @default(uuid())
  name             String
  email            String   @unique
  password         String
  professionalType ProfessionalType
  yearOfExperience Int?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  

  // Accountテーブルとのリレーション
  account          Account?
}

// 新しく追加するAccountモデル
model Account {
  id           String  @id @default(uuid())
  phoneNumber  String?
  postalCode   String?
  prefecture   String?
  city         String?
  addressLine1 String?
  addressLine2 String?
  bio          String? @db.Text
  website      String?
  company      String?
  position     String?
  
  // Userテーブルとのリレーション
  userId       String  @unique
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
}

// 既存のProfessionalType enum
enum ProfessionalType {
  LAWYER // 弁護士
  TAX_ACCOUNTANT // 税理士
  CPA // 公認会計士
  JUDICIAL_SCRIVENER // 司法書士
  ADMINISTRATIVE_SCRIVENER // 行政書士
  LABOR_CONSULTANT // 社会保険労務士
  PATENT_ATTORNEY // 弁理士
  REAL_ESTATE_APPRAISER // 不動産鑑定士
  LAND_SURVEYOR // 土地家屋調査士
  SME_CONSULTANT // 中小企業診断士
  OTHER // その他
}